var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.arrayIteratorImpl=function(a){var b=0;return function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}}};$jscomp.arrayIterator=function(a){return{next:$jscomp.arrayIteratorImpl(a)}};$jscomp.makeIterator=function(a){var b="undefined"!=typeof Symbol&&Symbol.iterator&&a[Symbol.iterator];return b?b.call(a):$jscomp.arrayIterator(a)};window.tdbCloudTemplatesVue={};
window.tdbCloudTemplatesVue.modal={template:'<div class="tdb-s-modal-wrap">\n            <div class="tdb-s-modal-bg"></div>\n\n            <div class="tdb-s-modal">\n                <div class="tdb-s-modal-header">\n                    <slot name="header"></slot>\n                </div>\n                \n                <div class="tdb-s-modal-body">\n                    <slot name="body"></slot>\n                </div>\n                \n                <div class="tdb-s-modal-footer">\n                    <slot name="footer"></slot>\n                </div>\n            </div>\n        </div>',props:{title:{type:String,
default:""}},data:function(){return{}},created:function(){},mounted:function(){},methods:{}};
window.tdbCloudTemplatesVue.error={template:'\n            <div class="tdb-error-wrap">                                   \n                <div class="tdb-error-alert">\n                    <span class="tdb-error-message">{{errorsToDisplay[0].message}}</span>\n                    <span class="tdb-error-open-extra" @click.prevent="showExtra = !showExtra">\n                        <template v-if="showExtra === false">+</template>\n                        <template v-else>-</template>\n                    </span>\n                    <div v-show="showExtra" class="tdb-error-extra" style="overflow: auto;">\n                        <div v-for="(error, index) in errorsToDisplay" :key="\'extra_error_\' + index" class="tdb-error-extra-single" @click.prevent="switchDebugDisplay(\'extra_error_\' + index)">\n                            <div>{{error.type}}: {{error.message}}</div>                            \n                            <div class="tdb-error-debug-data" v-show="debugDisplay[\'extra_error_\' + index]"><pre>{{error.debug_data}}</pre></div>\n                        </div>                        \n                    </div>\n                </div>\n            </div>',props:{errorsToDisplay:{default:null}},
data:function(){return{showExtra:!1,debugDisplay:null}},created:function(){this.setDebugDisplay()},methods:{setDebugDisplay:function(){if(null===this.errorsToDisplay)this.debugDisplay=null;else{var a={};this.errorsToDisplay.forEach(function(b,c,d){a["extra_error_"+c]=!1});this.debugDisplay=a}},switchDebugDisplay:function(a){this.debugDisplay[a]=!this.debugDisplay[a]}},watch:{errorsToDisplay:function(){this.setDebugDisplay()}}};
window.tdbCloudTemplatesVue.templates_card={template:'<div class="tdb-s-template-type-body">\n            \n            \x3c!-- tpl type --\x3e\n            \x3c!--<div style="padding: 12px 15px; color: orangered; font-weight: bold;">{{template_type}}</div>--\x3e\n\n            <div v-if="templatesCardData.templates.length" :class="[ \'tdb-templates\', \'tdb-s-content\', { \'tdb-s-content-loading\' : loading } ]">\n                <div class="tdb-templates-header">\n                    <div class="tdb-templates-header-item tdb-templates-header-item-name">\n                        <span>Cloud Templates</span>\n                    </div>\n                    <div v-if="\'page\' !== template_type && \'homepage\' !== template_type && !template_type.startsWith(\'pa_\')" class="tdb-templates-header-item tdb-templates-header-item-global">\n                        <span>Global</span>\n                    </div>\n                    <div v-if="\'homepage\' === template_type" class="tdb-templates-header-item tdb-templates-header-item-frontpage">\n                        <span>Front Page</span>\n                    </div>\n                    <div v-if="template_type.startsWith(\'pa_\')" class="tdb-templates-header-item tdb-templates-header-item-pa">\n                        <span>Use on attribute</span>\n                    </div>\n                    <div v-if="\'header\' !== template_type && \'footer\' !== template_type && !template_type.startsWith(\'pa_\')" class="tdb-templates-header-item tdb-templates-header-item-mobile">\n                        <span>Mobile Template</span>\n                    </div>\n                </div>\n                <div v-for="template in templatesCardData.templates" :class="[ \'tdb-template-el\', { \'tdb-template-el-renaming\' : templatesNameEditing[\'tpl_name_edit_\' + template.ID] }, { \'tdb-template-el-renaming-saving\' : templatesNameSaving[\'tpl_name_edit_saving_\' + template.ID] } ]">\n                    <div class="tdb-template-el-title">\n                        <template v-if="templatesNameEditing[\'tpl_name_edit_\' + template.ID]">\n                            <input\n                                :id="\'tpl_name_edit_\' + template.ID"\n                                v-model="editedTplName"\n                                :ref="\'tpl_name_edit_\' + template.ID"\n                                @keyup.enter="saveTemplateRename(template)"\n                                @keydown.esc="cancelTemplateRename(template)"\n                                :placeholder="template.post_title"\n                                class="tdb-template-el-title-input"\n                            >\n                            <div class="tdb-template-el-title-btns">\n                                <i @click="saveTemplateRename(template)" class="tdb-template-el-title-save td-icon-check" title="Save"></i>\n                                <i @click="cancelTemplateRename(template)" class="tdb-template-el-title-cancel td-icon-modal-close" title="Cancel"></i>\n                            </div>\n                        </template>\n                        <template v-else>\n                            <span :title="template.post_title">{{template.post_title}}</span>\n                        </template>\n                    </div>\n                    <div class="tdb-template-el-wrap">\n                        <div class="tdb-template-el-icon">\n                            <div class="tdb-template-el-options">\n                                <div :title="\'Edit template with \' + templatesCardDataBrand + \' Composer\'" class="tdb-template-el-edit-composer">\n                                    <a :href="getTdcEditLink(template)" target="_blank">Edit with {{templatesCardDataBrand}} Composer</a>\n                                </div>\n                                <div title="Edit template" class="tdb-template-el-edit">\n                                    <a :href="template.edit_link" target="_blank">Edit</a>\n                                </div>\n                                <div v-if="(template_type === \'cpt\' || template_type === \'cpt_tax\') && templatesCardDataView" title="View template" class="tdb-template-el-view">\n                                    <a :href="templatesCardDataView + \'?td_preview_template_id=\' + template.ID" target="_blank">View</a>\n                                </div>\n                                <div v-else-if="template.view_link" title="View template" class="tdb-template-el-view">\n                                    <a :href="template.view_link" target="_blank">View</a>\n                                </div>\n                                <div title="Rename template" class="tdb-template-el-rename" @click="templateRename(template)">Rename</div>\n                                <div title="Duplicate template" class="tdb-template-el-duplicate" @click="templateDuplicate(template)">Duplicate</div>\n                                <div title="Delete template" class="tdb-template-el-delete" @click="templateDelete(template.ID)">Delete</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div v-if="\'page\' !== template_type" class="tdb-template-el-global">\n                        <input type="checkbox" :class="[ \'tdb-template-el-global-input\', { \'tdb-template-el-global-input-checked\' : isGlobalTpl(templatesCardData, template.ID) }]">\n                        <label @click.prevent="setGlobalTpl(template.ID)"></label>\n                        <span v-if="\'homepage\' === template_type" class="tdb-template-el-global-checked">Yes</span>\n                        <span v-else class="tdb-template-el-global-checked">Global\n                            <span v-if="\'cpt\' === templateType || \'cpt_tax\' === templateType" @click.prevent="setGlobalTpl(\'\', true)" class="tdb-template-el-global-unassign" title="Unassign">X</span>\n                        </span>\n                    </div>\n                    <div v-if="\'header\' !== template_type && \'footer\' !== template_type && !template_type.startsWith(\'pa_\')" class="tdb-template-el-mobile-wrap">\n                        <span v-if="template.mobile_tpl_id" class="tdb-template-el-mobile">\n                            <span class="tdb-template-el-mobile-active">Yes</span>\n                        </span>\n                        <span v-else class="tdb-template-el-mobile">-</span>\n                        <div class="tdb-template-el-mobile-btns">\n                            <div title="Optional - New mobile template" class="tdb-template-el-mobile-btn tdb-template-el-mobile-blank tdb-create-mobile-template" @click="addMobileTpl(template.ID)"></div>\n                            <div :title="\'Load mobile template from \' + templatesCardDataBrand + \' Cloud Library\'" class="tdb-template-el-mobile-btn tdb-template-el-mobile-import tdb-load-mobile-template" @click="cloudLibraryImportMobile(template.ID)"></div>\n                            <div id="tdb-mobile-templates" class="tdb-template-el-mobile-list">\n                                <div class="tdb-template-el-mobile-list-inner">\n                                    <div :class="[ \'tdb-template-el-mobile-list-el\', { \'tdb-current\' : template.mobile_tpl_id === \'\' } ]">\n                                        <div class="tdb-template-el-mobile-list-title" @click="setMobileTpl(template.ID,\'\')">No mobile template</div>\n                                    </div>\n                                    <div v-for="mobile_tpl in templatesCardData.mobile_templates" :class="[ \'tdb-template-el-mobile-list-el\', { \'tdb-current\' : template.mobile_tpl_id === mobile_tpl.tpl_id } ]">\n                                        <div class="tdb-template-el-mobile-list-title" :title="mobile_tpl.tpl_title" @click="setMobileTpl(template.ID,mobile_tpl.tpl_id)">\n                                            {{ mobile_tpl.tpl_title }}\n                                        </div>\n                                        <a class="tdb-template-el-mobile-list-edit" :title="\'Edit mobile template with \' + templatesCardDataBrand + \' Composer\'" :href="mobile_tpl.tpl_tdc_url" target="_blank"></a>\n                                        <div class="tdb-template-el-mobile-list-delete" title="Delete mobile template" @click="templateDelete(mobile_tpl.tpl_id, true)"></div>\n                                    </div>\n                                </div>\n                                <div class="tdb-template-el-mobile-list-separator" style="height: 1px;width: 100%;background-color: #ebebeb;margin: 10px 0;"></div>\n                                <a v-if="templatesCardDataBrand === \'TD\'" href="https://tagdiv.com/newspaper-10-3-7-update-brings-customizable-and-fast-mobile-pages/" target="_blank" class="tdb-template-el-mobile-list-no-el">Documentation \u00bb</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \x3c!-- reload tpl card data btn --\x3e\n                \x3c!--<div @click="getTemplateCardData()" style="max-width: 100px; background-color: #2aabee; font-size: 10px; color: white; margin: 0 auto; text-align: center; cursor: pointer;">reload tpl card data</div>--\x3e\n                \x3c!-- errors --\x3e\n                <div class="tdb-s-template-type-errors" v-if="errors.length">\n                    <div v-for="error in errors" :class="[\'tdb-s-notif\', \'tdb-s-notif-xxsm\', \'tdb-s-notif-\' + error.type]">\n                        <div class="tdb-s-notif-descr">{{ error.message }}</div>\n                    </div>\n                </div>\n            </div>\n            <div v-else class="tdb-templates tdb-no-templates-notif">\n                No cloud templates. Please import one or more templates from <b>Cloud Library</b>.\n            </div>\n            \n            \x3c!-- new mobile tpl modal --\x3e\n            <modal v-if="showMobileTplModal">\n                <template slot="header">\n                    <h3 class="tdb-s-modal-title">Create Mobile Template</h3>\n                    <svg class="tdb-s-modal-close" @click="showMobileTplModal = false" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14">\n                        <g transform="translate(-5 -5)">\n                            <path d="M0,13a1,1,0,0,1-.707-.293,1,1,0,0,1,0-1.414l12-12a1,1,0,0,1,1.414,0,1,1,0,0,1,0,1.414l-12,12A1,1,0,0,1,0,13Z" transform="translate(6 6)"/>\n                            <path d="M12,13a1,1,0,0,1-.707-.293l-12-12a1,1,0,0,1,0-1.414,1,1,0,0,1,1.414,0l12,12A1,1,0,0,1,12,13Z" transform="translate(6 6)"/>\n                        </g>\n                    </svg>\n                </template>\n                \n                <template slot="body">\n                    <div class="tdb-s-form tdb-s-new-mob-template-form">\n                        <div class="tdb-s-form-content">\n                            <div class="tdb-s-fc-inner">\n                                <div class="tdb-s-form-group tdb-s-form-group-sm tdb-s-form-group-name">\n                                    <label class="tdb-s-form-label" for="tdb-new-template-name">Name</label>\n                                    <input class="tdb-s-form-input" id="tdb-new-template-name" type="text" v-model="newMobileTplName">\n                                </div>\n                                <div class="tdb-s-form-group tdb-s-form-group-sm tdb-s-form-group-content">\n                                    <div class="tdb-s-form-check">\n                                        <label for="tdb-copy-content">\n                                            <input type="checkbox" id="tdb-copy-content" v-model="copyContent">\n                                            <span class="tdb-s-fc-check"></span>\n                                            <span class="tdb-s-fc-title">Copy content</span>\n                                        </label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </template>\n                \n                <template slot="footer">\n                    <button class="tdb-s-btn tdb-s-btn-sm tdb-s-btn-hollow" @click="cancelAddNewMobTpl">Cancel</button>\n                    <button class="tdb-s-btn tdb-s-btn-sm" @click="addMobileTpl(template)">Create</button>\n                </template>\n            </modal>\n            \n        </div>',props:{templates_card_data:{type:Object,
required:!0},template_type:{type:String,required:!0},custom_template_type:{type:String}},data:function(){return{errors:[],templatesCardData:[],templateType:"",templatesCardDataId:"",templatesCardDataView:"",loading:!1,templatesNameEditing:null,templatesNameSaving:null,editedTplName:"",showMobileTplModal:!1,template:"",newMobileTplName:"",copyContent:!1,customTemplateType:""}},created:function(){var a=this;a.templatesCardData=this.templates_card_data;a.templatesCardDataId=this.templates_card_data.tpl_card_data_assets.card_tpl_data_id;
a.templatesCardDataView=a.templatesCardData.tpl_card_data_assets.card_tpl_data_view_link;a.templatesCardDataBrand=a.templatesCardData.tpl_card_data_assets.card_tpl_data_brand_txt;a.templateType=this.template_type;a.setTemplateNameEditDisplay();a.customTemplateType=this.custom_template_type;eventHub.$on("refresh-cpt",a.refreshCpt);eventHub.$on("refresh-cpt-tax",a.refreshCptTax);var b="";b=a.templateType.startsWith("pa_")||"woo_archive_tag"===a.templateType||"woo_archive_attribute"===a.templateType?
"tdb_ct_tpl_card_data_update_woo_archive":"tdb_ct_tpl_card_data_update_"+a.templateType;jQuery("body").on(b,function(b,d){a.getTemplateCardData()})},methods:{getTemplateCardData:function(a){var b=this;b.loading=!0;b.errors=[];jQuery.ajax({url:td_ajax_url,type:"post",data:{action:"tdb_ct_get_tpl_card_data",_nonce:window.tdb_globals.wpRestNonce,tpl_type:b.templateType},success:function(c){c=JSON.parse(c);"undefined"!==typeof c.templates?(b.templatesCardData=c,b.templatesCardDataId=c.tpl_card_data_assets.card_tpl_data_id,
b.templatesCardDataView=c.tpl_card_data_assets.card_tpl_data_view_link,"undefined"!==typeof a&&"undefined"!==typeof a.callback&&a.callback()):b.errors.push({type:c.type,message:"tpl card data update error: "+c.msg});b.loading=!1},error:function(b,a,e){console.log("%c"+e,"color: #dc2121c7")}})},cloudLibraryImportMobile:function(a){var b="page"===this.templateType||"homepage"===this.templateType?"page":this.templateType;a={wp_type:b,force_parent_template_type:b,hide_mobile_selector:"hide",install_template_route:"addRoute",
assign_mobile_to_template:a.toString()};switch(this.templateType){case "page":a.templateType="Pages";break;case "homepage":a.templateType="Homepages"}window.tdbVue.router.push({name:"loadRoute",params:a})},getTdcEditLink:function(a){var b=window.tdb_globals.wpAdminUrl,c=encodeURIComponent(window.location);switch(this.templateType){case "page":case "homepage":var d="page";break;case "woo_archive_attribute":case "woo_archive_tag":d="woo_archive";break;default:d=this.templateType.startsWith("pa_")?"woo_archive":
this.templateType}return this.templatesCardDataId?b+"post.php?post_id="+a.ID+"&td_action=tdc&tdbLoadDataFromId="+this.templatesCardDataId+"&tdbTemplateType="+d+"&prev_url="+c:b+"post.php?post_id="+a.ID+"&td_action=tdc&tdbTemplateType="+d+"&prev_url="+c},isGlobalTpl:function(a,b){if("undefined"!==typeof a.global_tpls){a=$jscomp.makeIterator(Object.entries(a.global_tpls));for(var c=a.next();!c.done;c=a.next()){var d=$jscomp.makeIterator(c.value);c=d.next().value;d=d.next().value;if(c===this.customTemplateType&&
d===b)return!0}}else if("undefined"!==typeof a.global_tpl&&a.global_tpl===b)return!0;return!1},setGlobalTpl:function(a,b){var c=this;c.loading=!0;c.errors=[];a={_nonce:window.tdb_globals.wpRestNonce,template_id:a,template_type:c.templateType};"undefined"!==typeof b&&!0===b&&(a.unset=!0);switch(c.templateType){case "single":case "header":case "footer":case "404":case "attachment":case "author":case "date":case "tag":case "search":case "woo_product":case "woo_shop_base":case "woo_search_archive":case "homepage":a.action=
"tdb_assign_"+c.templateType+"_template_global";break;case "cpt":a.cpt=c.customTemplateType;a.action="tdb_assign_"+c.templateType+"_template_global";break;case "cpt_tax":a.cpt_tax=c.customTemplateType;a.action="tdb_assign_"+c.templateType+"_template_global";break;case "category":a.action="tdb_assign_cat_template_global";break;case "woo_archive":case "woo_archive_attribute":case "woo_archive_tag":a.action="tdb_ct_assign_woo_archive_tpl_global",a.template_type=c.templateType}c.templateType.startsWith("pa_")&&
(a.action="tdb_ct_assign_woo_archive_tpl_global",a.template_type=c.templateType);"undefined"!==typeof a.action&&jQuery.ajax({type:"post",url:td_ajax_url,data:a,success:function(b){"undefined"!==typeof JSON.parse(b).global_template_id?c.getTemplateCardData({callback:function(){"cpt_tax"===c.templateType?window.eventHub.$emit("refresh-cpt-tax",c.templatesCardData.templates,c.templatesCardData.mobile_templates):"cpt"===c.templateType&&window.eventHub.$emit("refresh-cpt",c.templatesCardData.templates,
c.templatesCardData.mobile_templates)}}):(c.errors.push({type:"error",message:"tpl card set global tpl error: missing template id or invalid nonce"}),c.loading=!1)},error:function(b,a,c){console.log("%c"+c,"color: #dc2121c7")}})},addMobileTpl:function(a){var b=this;b.errors=[];void 0!==a&&(b.template=a);if(!b.showMobileTplModal)b.showMobileTplModal=!0;else if(b.template){a="page"===b.templateType||"homepage"===b.templateType?"page":b.templateType;if("woo_archive_tag"===a||"woo_archive_attribute"===
a)a="woo_archive";jQuery.ajax({type:"post",url:td_ajax_url,data:{action:"tdb_create_mobile_template",template_id:b.template,template_title:b.newMobileTplName,template_type:a,copyContent:b.copyContent?"1":"0",_nonce:window.tdb_globals.wpRestNonce},success:function(a){a=JSON.parse(a);"undefined"!==typeof a.mobile_template_id?(b.cancelAddNewMobTpl(),"woo_archive"===b.templateType||"woo_archive_tag"===b.templateType||"woo_archive_attribute"===b.templateType?jQuery("body").trigger("tdb_ct_tpl_card_data_update_woo_archive"):
b.getTemplateCardData({callback:function(){"cpt_tax"===b.templateType?window.eventHub.$emit("refresh-cpt-tax",b.templatesCardData.templates,b.templatesCardData.mobile_templates):"cpt"===b.templateType&&window.eventHub.$emit("refresh-cpt",b.templatesCardData.templates,b.templatesCardData.mobile_templates)}}),"page"===b.templateType?jQuery("body").trigger("tdb_ct_tpl_card_data_update_homepage"):"homepage"===b.templateType&&jQuery("body").trigger("tdb_ct_tpl_card_data_update_page")):(b.errors.push({type:a.type,
message:"tpl card create mobile tpl error: "+a.msg}),b.cancelAddNewMobTpl())},error:function(b,a,e){console.log("%c"+e,"color: #dc2121c7")}})}},setMobileTpl:function(a,b){var c=this;c.errors=[];jQuery.ajax({type:"post",url:td_ajax_url,data:{action:"tdb_set_mobile_template",template_id:a,mobile_template_id:b,_nonce:window.tdb_globals.wpRestNonce},success:function(b){b=JSON.parse(b);_.isObject(b)&&!_.isUndefined(b.result)&&1===b.result?c.getTemplateCardData({callback:function(){"cpt_tax"===c.templateType?
window.eventHub.$emit("refresh-cpt-tax",c.templatesCardData.templates,c.templatesCardData.mobile_templates):"cpt"===c.templateType&&window.eventHub.$emit("refresh-cpt",c.templatesCardData.templates,c.templatesCardData.mobile_templates)}}):c.errors.push({type:b.type,message:"tpl card set mobile template error: "+b.msg})},error:function(b,a,c){console.log("%c"+c,"color: #dc2121c7")}})},cancelAddNewMobTpl:function(){this.newMobileTplName=this.template="";this.copyContent=this.showMobileTplModal=!1},
setTemplateNameEditDisplay:function(){var a={},b={};this.templatesCardData.templates.length&&(this.templatesCardData.templates.forEach(function(c,d){a["tpl_name_edit_"+c.ID]=!1;b["tpl_name_edit_saving_"+c.ID]=!1}),this.templatesNameEditing=a,this.templatesNameSaving=b)},templateRename:function(a){var b=this;b.errors=[];b.templatesNameEditing["tpl_name_edit_"+a.ID]=!b.templatesNameEditing["tpl_name_edit_"+a.ID];b.editedTplName=a.post_title;b.$nextTick(function(){Object.entries(b.templatesNameEditing).forEach(function(a){a[1]&&
"undefined"!==typeof b.$refs[a[0]][0]&&b.$refs[a[0]][0].focus()})})},saveTemplateRename:function(a){var b=this;b.editedTplName!==a.post_title?(b.templatesNameSaving["tpl_name_edit_saving_"+a.ID]=!b.templatesNameSaving["tpl_name_edit_saving_"+a.ID],jQuery.ajax({url:td_ajax_url,type:"post",data:{action:"tdb_change_template_name",template_id:a.ID,template_title:b.editedTplName,_nonce:window.tdb_globals.wpRestNonce},success:function(c){c=JSON.parse(c);"undefined"!==typeof c.template_id?(a.post_title=
b.editedTplName,b.templatesNameSaving["tpl_name_edit_saving_"+a.ID]=!b.templatesNameSaving["tpl_name_edit_saving_"+a.ID],b.templatesNameEditing["tpl_name_edit_"+a.ID]=!b.templatesNameEditing["tpl_name_edit_"+a.ID],(b.templateType.startsWith("pa_")||"woo_archive"===b.templateType||"woo_archive_tag"===b.templateType||"woo_archive_attribute"===b.templateType)&&jQuery("body").trigger("tdb_ct_tpl_card_data_update_woo_archive"),"cpt_tax"===b.templateType?window.eventHub.$emit("refresh-cpt-tax",b.templatesCardData.templates,
b.templatesCardData.mobile_templates):"cpt"===b.templateType&&window.eventHub.$emit("refresh-cpt",b.templatesCardData.templates,b.templatesCardData.mobile_templates)):b.errors.push({type:c.type,message:"tpl card change template name error: "+c.msg})},error:function(b,a,e){console.log("%c"+e,"color: #dc2121c7")}})):b.cancelTemplateRename(a)},cancelTemplateRename:function(a){this.templatesNameEditing["tpl_name_edit_"+a.ID]=!this.templatesNameEditing["tpl_name_edit_"+a.ID]},blur:function(a){a.target.blur()},
templateDuplicate:function(a){var b=this,c="";switch(b.templateType){case "page":case "homepage":c="page";break;case "woo_archive_attribute":case "woo_archive_tag":c="woo_archive";break;default:c=b.templateType.startsWith("pa_")?"woo_archive":b.templateType}b.errors=[];tdbApi.run({wpNonce:window.tdb_globals.wpRestNonce,cloudEndPoint:"td-cloud-library/new_template",post:{postId:a.ID,templateType:c,templateName:a.post_title,duplicateTemplate:!0},done:function(a){"undefined"!==typeof a.template_id?b.templateType.startsWith("pa_")||
"woo_archive"===b.templateType||"woo_archive_tag"===b.templateType||"woo_archive_attribute"===b.templateType?jQuery("body").trigger("tdb_ct_tpl_card_data_update_woo_archive"):b.getTemplateCardData({callback:function(){"cpt_tax"===b.templateType?window.eventHub.$emit("refresh-cpt-tax",b.templatesCardData.templates,b.templatesCardData.mobile_templates):"cpt"===b.templateType&&window.eventHub.$emit("refresh-cpt",b.templatesCardData.templates,b.templatesCardData.mobile_templates)}}):b.errors.push({type:"error",
message:"tpl card duplicate template error: "+a.error})},error:function(b){console.log("td-cloud-library/new_template ( duplicate template ) - ERROR",b)}})},templateDelete:function(a,b){b=void 0===b?!1:b;var c=this;c.errors=[];jQuery.ajax({type:"POST",url:td_ajax_url,data:{action:"tdb_delete_template",template_id:a,_nonce:window.tdb_globals.wpRestNonce},success:function(a){a=JSON.parse(a);"undefined"!==typeof a.template_id?(c.templateType.startsWith("pa_")||"woo_archive"===c.templateType||"woo_archive_tag"===
c.templateType||"woo_archive_attribute"===c.templateType?jQuery("body").trigger("tdb_ct_tpl_card_data_update_woo_archive"):c.getTemplateCardData({callback:function(){"cpt_tax"===c.templateType?window.eventHub.$emit("refresh-cpt-tax",c.templatesCardData.templates,c.templatesCardData.mobile_templates):"cpt"===c.templateType&&window.eventHub.$emit("refresh-cpt",c.templatesCardData.templates,c.templatesCardData.mobile_templates)}}),b&&("page"===c.templateType?jQuery("body").trigger("tdb_ct_tpl_card_data_update_homepage"):
"homepage"===c.templateType&&jQuery("body").trigger("tdb_ct_tpl_card_data_update_page"))):c.errors.push({type:a.type,message:"tpl card delete template error: "+a.msg})},error:function(b,a,c){console.log("%c"+c,"color: #dc2121c7")}})},refreshCpt:function(a,b){"cpt"===this.templateType&&("undefined"!==typeof a&&(this.templatesCardData.templates=a),"undefined"!==typeof b&&(this.templatesCardData.mobile_templates=b))},refreshCptTax:function(a,b){"cpt_tax"===this.templateType&&("undefined"!==typeof a&&
(this.templatesCardData.templates=a),"undefined"!==typeof b&&(this.templatesCardData.mobile_templates=b))}},watch:{templatesCardData:function(){this.setTemplateNameEditDisplay()}},components:{modal:window.tdbCloudTemplatesVue.modal}};
window.tdbCloudTemplatesVue.modules_templates_card={template:'<div class="tdb-s-template-type-body">\n            \n            \x3c!-- tpl type --\x3e\n            \x3c!--<div style="padding: 12px 15px; color: orangered; font-weight: bold;">{{template_type}}</div>--\x3e\n\n            <div v-if="templatesCardData.templates.length" :class="[ \'tdb-templates\', \'tdb-s-content\', { \'tdb-s-content-loading\' : loading } ]">\n                <div class="tdb-templates-header">\n                    <div class="tdb-templates-header-item tdb-templates-header-item-name" style="text-align: left;">\n                        <span>Cloud Templates</span>\n                    </div>\n                </div>\n                <div v-for="template in templatesCardData.templates" :class="[ \'tdb-template-el\', { \'tdb-template-el-renaming\' : templatesNameEditing[\'tpl_name_edit_\' + template.ID] }, { \'tdb-template-el-renaming-saving\' : templatesNameSaving[\'tpl_name_edit_saving_\' + template.ID] } ]">\n                    <div class="tdb-template-el-title">\n                        <template v-if="templatesNameEditing[\'tpl_name_edit_\' + template.ID]">\n                            <input\n                                :id="\'tpl_name_edit_\' + template.ID"\n                                v-model="editedTplName"\n                                :ref="\'tpl_name_edit_\' + template.ID"\n                                @keyup.enter="templateRenameSave(template)"\n                                @keydown.esc="templateRenameCancel(template)"\n                                :placeholder="template.post_title"\n                                class="tdb-template-el-title-input"\n                            >\n                            <div class="tdb-template-el-title-btns">\n                                <i @click="templateRenameSave(template)" class="tdb-template-el-title-save td-icon-check" title="Save"></i>\n                                <i @click="templateRenameCancel(template)" class="tdb-template-el-title-cancel td-icon-modal-close" title="Cancel"></i>\n                            </div>\n                        </template>\n                        <template v-else>\n                            <span :title="template.post_title">{{template.post_title}}</span>\n                        </template>\n                    </div>\n                    <div class="tdb-template-el-wrap">\n                        <div class="tdb-template-el-icon">\n                            <div class="tdb-template-el-options">\n                                <div title="Edit template with tagDiv Composer" class="tdb-template-el-edit-composer">\n                                    <a :href="getTdcEditLink(template)" target="_blank">Edit with TD Composer</a>\n                                </div>\n                                <div v-if="template.edit_link" title="Edit template" class="tdb-template-el-edit">\n                                    <a :href="template.edit_link" target="_blank">Edit</a>\n                                </div>\n                                <div v-if="template.view_link" title="View template" class="tdb-template-el-view">\n                                    <a :href="template.view_link" target="_blank">View</a>\n                                </div>\n                                <div title="Rename template" class="tdb-template-el-rename" @click="templateRename(template)">Rename</div>\n                                <div title="Duplicate template" class="tdb-template-el-duplicate" @click="templateDuplicate(template)">Duplicate</div>\n                                <div title="Delete template" class="tdb-template-el-delete" @click="templateDelete(template.ID)">Delete</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \x3c!-- reload tpl card data btn --\x3e\n                \x3c!--<div @click="getTemplateCardData()" style="max-width: 100px; background-color: #2aabee; font-size: 10px; color: white; margin: 0 auto; text-align: center; cursor: pointer;">reload tpl card data</div>--\x3e\n\n                \x3c!-- errors --\x3e\n                <div class="tdb-s-template-type-errors" v-if="errors.length">\n                    <div v-for="error in errors" :class="[\'tdb-s-notif\', \'tdb-s-notif-xxsm\', \'tdb-s-notif-\' + error.type]">\n                        <div class="tdb-s-notif-descr">{{ error.message }}</div>\n                    </div>\n                </div>\n            </div>\n            <div v-else class="tdb-templates tdb-no-templates-notif">\n                No cloud templates. Please import one or more templates from <b>Cloud Library</b>.\n            </div>\n            \n        </div>',props:{templates_card_data:{type:Object,
required:!0}},data:function(){return{errors:[],templatesCardData:[],loading:!1,templatesNameEditing:null,templatesNameSaving:null,editedTplName:""}},created:function(){var a=this;a.templatesCardData=this.templates_card_data;a.setTemplateNameEditDisplay();eventHub.$on("refresh-templates",a.templatesRefresh);jQuery("body").on("tdb_ct_tpl_card_data_update_module",function(b,c){a.getTemplateCardData()})},methods:{getTemplateCardData:function(a){var b=this;b.loading=!0;b.errors=[];jQuery.ajax({url:td_ajax_url,
type:"post",data:{action:"tdb_get_module_templates",_nonce:window.tdb_globals.wpRestNonce},success:function(c){c=JSON.parse(c);"undefined"!==typeof c.templates?(b.templatesCardData=c,"undefined"!==typeof a&&"undefined"!==typeof a.callback&&a.callback()):b.errors.push({type:c.type,message:"tpl card data update error: "+c.msg});b.loading=!1},error:function(b,a,e){console.log("%c"+e,"color: #dc2121c7")}})},getTdcEditLink:function(a){var b=window.tdb_globals.wpAdminUrl,c=encodeURIComponent(window.location);
return b+"post.php?post_id="+a.ID+"&td_action=tdc&tdbTemplateType=module"+(this.templatesCardData.data_preview_id?"&tdbLoadDataFromId="+this.templatesCardData.data_preview_id:"")+"&prev_url="+c},setTemplateNameEditDisplay:function(){var a={},b={};this.templatesCardData.templates.length&&(this.templatesCardData.templates.forEach(function(c,d){a["tpl_name_edit_"+c.ID]=!1;b["tpl_name_edit_saving_"+c.ID]=!1}),this.templatesNameEditing=a,this.templatesNameSaving=b)},templateRename:function(a){var b=this;
b.errors=[];b.templatesNameEditing["tpl_name_edit_"+a.ID]=!b.templatesNameEditing["tpl_name_edit_"+a.ID];b.editedTplName=a.post_title;b.$nextTick(function(){Object.entries(b.templatesNameEditing).forEach(function(a){a[1]&&"undefined"!==typeof b.$refs[a[0]][0]&&b.$refs[a[0]][0].focus()})})},templateRenameSave:function(a){var b=this;b.editedTplName!==a.post_title?(b.templatesNameSaving["tpl_name_edit_saving_"+a.ID]=!b.templatesNameSaving["tpl_name_edit_saving_"+a.ID],jQuery.ajax({url:td_ajax_url,type:"post",
data:{action:"tdb_change_template_name",template_id:a.ID,template_title:b.editedTplName,_nonce:window.tdb_globals.wpRestNonce},success:function(c){c=JSON.parse(c);"undefined"!==typeof c.template_id?(a.post_title=b.editedTplName,b.templatesNameSaving["tpl_name_edit_saving_"+a.ID]=!b.templatesNameSaving["tpl_name_edit_saving_"+a.ID],b.templatesNameEditing["tpl_name_edit_"+a.ID]=!b.templatesNameEditing["tpl_name_edit_"+a.ID],window.eventHub.$emit("refresh-templates",b.templatesCardData.templates)):b.errors.push({type:c.type,
message:"tpl card change template name error: "+c.msg})},error:function(b,a,e){console.log("%c"+e,"color: #dc2121c7")}})):b.templateRenameCancel(a)},templateRenameCancel:function(a){this.templatesNameEditing["tpl_name_edit_"+a.ID]=!this.templatesNameEditing["tpl_name_edit_"+a.ID]},templateDuplicate:function(a){var b=this;b.errors=[];tdbApi.run({wpNonce:window.tdb_globals.wpRestNonce,cloudEndPoint:"td-cloud-library/new_template",post:{postId:a.ID,templateType:"module",templateName:a.post_title,duplicateTemplate:!0},
done:function(a){"undefined"!==typeof a.template_id?b.getTemplateCardData({callback:function(){window.eventHub.$emit("refresh-templates",b.templatesCardData.templates)}}):b.errors.push({type:"error",message:"tpl card duplicate template error: "+a.error})},error:function(b){console.log("td-cloud-library/new_template ( duplicate template ) - ERROR",b)}})},templateDelete:function(a){var b=this;b.errors=[];jQuery.ajax({type:"POST",url:td_ajax_url,data:{action:"tdb_delete_template",template_id:a,_nonce:window.tdb_globals.wpRestNonce},
success:function(a){a=JSON.parse(a);"undefined"!==typeof a.template_id?b.getTemplateCardData({callback:function(){window.eventHub.$emit("refresh-templates",b.templatesCardData.templates)}}):b.errors.push({type:a.type,message:"tpl card delete template error: "+a.msg})},error:function(b,a,e){console.log("%c"+e,"color: #dc2121c7")}})},templatesRefresh:function(a){"undefined"!==typeof a&&(this.templatesCardData.templates=a)}},watch:{templatesCardData:function(){this.setTemplateNameEditDisplay()}},components:{modal:window.tdbCloudTemplatesVue.modal}};
window.tdbCloudTemplatesVue.templates={template:'<div class="tdb-s-page tdb-s-page-templates-list">\n            <div class="tdb-s-page-content">\n                <div class="tdb-s-page-inner">\n                    <div class="tdb-s-page-sec">\n                    \n                        \x3c!-- header --\x3e\n                        <div class="tdb-s-page-sec-header">\n                            <h2 class="tds-spsh-title">Header and Footer Templates</h2>\n                        </div>\n                    \n                        \x3c!-- templates --\x3e\n                        <div :class="[\'tdb-s-page-sec-content\', \'tdb-s-content\', { \'tdb-s-content-loading\' : !templatesReady} ]">\n                            <template v-if="templatesReady">\n                                \x3c!-- errors --\x3e\n                                <div class="errors" v-if="errors.length" style="margin-bottom: 20px; color: orangered;">\n                                    <div v-for="error in errors">\n                                        <div :class="\'type-\' + error.type">{{ error.msg }}</div>\n                                    </div>\n                                </div>\n                                <div v-if="Object.keys(cloudTemplates).length" class="tdb-s-template-types">\n                                    <template v-for="(data, template_type) in cloudTemplates">\n                                        <h3 v-if="template_type === \'a_404\'" class="tdb-s-template-types-title">WordPress Templates</h3>\n                                        <h3 v-if="template_type === \'homepage\'" class="tdb-s-template-types-title">Page Templates</h3>\n                                        <template v-if="isGeneralTpl(template_type)">\n                                            <div :class="[\'tdb-s-template-type\', \'tdb-s-template-type_\' + template_type]">\n                                                <div class="tdb-s-template-type-header">\n                                                    <h4 class="tdb-s-tth-title">{{ getTplCardHeader(template_type) }} templates</h4>\n                                                    <div class="tdb-s-tth-new" title="Import from Cloud Library" @click="cloudLibraryImport(template_type)">\n                                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-plus">\n                                                            <line x1="12" y1="5" x2="12" y2="19"></line>\n                                                            <line x1="5" y1="12" x2="19" y2="12"></line>\n                                                        </svg>\n                                                    </div>\n                                                </div>\n                                                <templates-card :templates_card_data="data" :template_type="template_type === \'a_404\' ? \'404\' : template_type"></templates-card>\n                                            </div>\n                                        </template>\n                                    </template>\n                                </div>\n                                <div v-else class="tdb-notif tdb-notif-info">\n                                    <div class="tdb-notif-descr">No cloud templates found!</div>\n                                </div>\n                            </template>\n                        </div>\n                        \n                    </div>\n                </div>\n            </div>\n        </div>',
data:function(){return{errors:[],templatesReady:!1,cloudTemplates:[],showMobileTplModal:!1}},created:function(){this.getCloudTemplates()},methods:{getCloudTemplates:function(){var a=this;jQuery.ajax({url:td_ajax_url,type:"post",data:{action:"tdb_ct_get_all",_nonce:window.tdb_globals.wpRestNonce},success:function(b){b=JSON.parse(b);"undefined"!==typeof b.templates?(a.cloudTemplates=b.templates,console.log("getCloudTemplates reply: ",b.templates)):a.errors.push({type:"error",msg:"Error, no templates data received from server."});
a.templatesReady=!0},error:function(b,a,d){console.log("%c"+d,"color: #dc2121c7")}})},getTplCardHeader:function(a){a=("a_404"===a?"404":a).replaceAll("_"," ");return a.charAt(0).toUpperCase()+a.slice(1)},cloudLibraryImport:function(a){a="a_404"===a?"404":a;var b={wp_type:a,force_parent_template_type:a,hide_mobile_selector:"hide",install_template_route:"addRoute"};switch(a){case "single":b.assign_to_post="";break;case "category":b.assign_to_category="";break;case "404":b.assign_to_404="";break;case "archive":b.assign_to_archive=
"";break;case "search":b.assign_to_search="";break;case "attachment":b.assign_to_attachment="";break;case "author":b.assign_to_author="";break;case "tag":b.assign_to_tag="";break;case "page":b.templateType="Pages";break;case "homepage":b.templateType="Homepages"}window.tdbVue.router.push({name:"loadRoute",params:b})},isGeneralTpl:function(a){switch("a_404"===a?"404":a){case "header":case "footer":case "page":case "homepage":case "404":case "single":case "category":case "author":case "attachment":case "date":case "search":case "tag":return!0}return!1}},
watch:{},components:{"templates-card":window.tdbCloudTemplatesVue.templates_card}};
window.tdbCloudTemplatesVue.templates_shop={template:'<div class="tdb-s-page tdb-s-page-templates-list tdb-s-page-templates-shop-list">\n            <div class="tdb-s-page-content">\n                <div class="tdb-s-page-inner">\n                    <div class="tdb-s-page-sec">\n                    \n                        \x3c!-- header --\x3e\n                        <div class="tdb-s-page-sec-header">\n                            <h2 class="tds-spsh-title">Shop Templates</h2>\n                        </div>\n                    \n                        \x3c!-- templates --\x3e\n                        <div :class="[\'tdb-s-page-sec-content\', \'tdb-s-content\', { \'tdb-s-content-loading\' : !templatesReady} ]">\n                            <template v-if="templatesReady">\n                                \x3c!-- errors --\x3e\n                                <div class="errors" v-if="errors.length" style="margin-bottom: 20px; color: orangered;">\n                                    <div v-for="error in errors">\n                                        <div :class="\'type-\' + error.type">{{ error.msg }}</div>\n                                    </div>\n                                </div>\n                                <div v-if="Object.keys(cloudTemplates).length" class="tdb-s-template-types">\n                                    <template v-for="(template_data, template_type) in cloudTemplates">\n                                        <template v-if="isShopTpl(template_type)">\n                                            <div :class="[\'tdb-s-template-type\', \'tdb-s-template-type_\' + template_type]">\n                                                <div class="tdb-s-template-type-header">\n                                                    <h4 v-if="template_data.tpl_card_data_assets.card_tpl_data_view_link" class="tdb-s-tth-title">\n                                                        <a :href="template_data.tpl_card_data_assets.card_tpl_data_view_link" target="_blank">\n                                                            {{ getTplCardHeader( template_type, template_data ) }}\n                                                        </a>\n                                                    </h4>\n                                                    <h4 v-else class="tdb-s-tth-title">{{ getTplCardHeader( template_type, template_data ) }}</h4>\n                                                    <div class="tdb-s-tth-new" title="Import from Cloud Library" @click="cloudLibraryImport(template_type)">\n                                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-plus">\n                                                            <line x1="12" y1="5" x2="12" y2="19"></line>\n                                                            <line x1="5" y1="12" x2="19" y2="12"></line>\n                                                        </svg>\n                                                    </div>\n                                                </div>\n                                                <templates-card :templates_card_data="template_data" :template_type="template_type"></templates-card>\n                                            </div>\n                                        </template>\n                                        <h3 v-if="template_type === \'woo_archive_attribute\'" class="tdb-s-template-types-title">Attributes Templates</h3>\n                                    </template>\n                                </div>\n                                <div v-else class="tdb-notif tdb-notif-info">\n                                    <div class="tdb-notif-descr">No cloud templates found!</div>\n                                </div>\n                            </template>\n                        </div>\n                        \n                    </div>\n                </div>\n            </div>\n        </div>',data:function(){return{errors:[],
templatesReady:!1,cloudTemplates:[],showMobileTplModal:!1}},created:function(){this.getCloudTemplates()},methods:{getCloudTemplates:function(){var a=this;jQuery.ajax({url:td_ajax_url,type:"post",data:{action:"tdb_ct_get_all",_nonce:window.tdb_globals.wpRestNonce},success:function(b){b=JSON.parse(b);"undefined"!==typeof b.templates?(a.cloudTemplates=b.templates,console.log("getShopCloudTemplates reply: ",b.templates)):a.errors.push({type:"error",msg:"Error, no templates data received from server."});
a.templatesReady=!0},error:function(b,a,d){console.log("%c"+d,"color: #dc2121c7")}})},getTplCardHeader:function(a,b){if(a.startsWith("pa_"))return"Woo attribute - "+(b.tpl_card_data_assets.att_data?b.tpl_card_data_assets.att_data.attribute_label:"");if("woo_archive"===a)return"Woo categories archive templates";a=a.replaceAll("_"," ");return a.charAt(0).toUpperCase()+a.slice(1)+" templates"},cloudLibraryImport:function(a){a=a.startsWith("pa_")||"woo_archive_tag"===a||"woo_archive_attribute"===a?"woo_archive":
a;window.tdbVue.router.push({name:"loadRoute",params:{wp_type:a,force_parent_template_type:a,hide_mobile_selector:"hide",install_template_route:"addRoute"}})},isShopTpl:function(a){switch(a){case "woo_product":case "woo_archive":case "woo_archive_tag":case "woo_archive_attribute":case "woo_search_archive":case "woo_shop_base":return!0}return a.startsWith("pa_")}},watch:{},components:{"templates-card":window.tdbCloudTemplatesVue.templates_card}};
window.tdbCloudTemplatesVue.templates_trash={template:'<div class="tdb-s-page tdb-s-page-templates-trash-list">\n            <div class="tdb-s-page-content">\n                <div class="tdb-s-page-inner">\n                    <div class="tdb-s-page-sec">\n                    \n                        \x3c!-- header --\x3e\n                        <div class="tdb-s-page-sec-header tdb-spsh-row">\n                            <div class="tdb-spsh-col">\n                                <h2 class="tds-spsh-title">Trash</h2>\n                            </div>\n                            <div class="tdb-spsh-col">\n                                \x3c!-- delete all button --\x3e\n                                <button class="tdb-s-btn tdb-s-btn-sm" @click.prevent="deleteAll" :disabled="!templatesReady || !templates.length">Delete all</button>\n                            </div>\n                        </div>\n                            \n                        \x3c!-- templates --\x3e\n                        <div :class="[\'tdb-s-page-sec-content\', \'tdb-s-content\', { \'tdb-s-content-loading\' : !templatesReady} ]">\n                            <template v-if="templatesReady">\n                                \x3c!-- errors --\x3e\n                                <div class="errors" v-if="errors.length" style="margin-bottom: 20px; color: orangered;">\n                                    <div v-for="error in errors">\n                                        <div :class="\'type-\' + error.type">{{ error.msg }}</div>\n                                    </div>\n                                </div>\n                                <table v-if="templates.length" class="tdb-s-table tdb-s-table-trash">\n                                    <thead class="tdb-s-table-header">\n                                        <tr class="tdb-s-table-row tdb-s-table-row-h">\n                                            <th class="tdb-s-table-col">Template title</th>\n                                            <th class="tdb-s-table-col">Template type</th>\n                                            <th class="tdb-s-table-col"></th>\n                                        </tr>\n                                    </thead>\n                                    <tbody class="tdb-s-table-body">\n                                        <tr v-for="(template, index) in templates" class="tdb-s-table-row">\n                                            <td class="tdb-s-table-col">\n                                                <div class="tds-s-table-col-label">Template title</div>\n                                                {{ template.post_title }}\n                                            </td>\n                                            <td class="tdb-s-table-col">\n                                                <div class="tds-s-table-col-label">Template type</div>\n                                                {{ template.tpl_type }}\n                                            </td>\n                                            <td class="tdb-s-table-col tdb-s-table-col-options">\n                                                <svg class="tdb-s-table-options-toggle" xmlns="http://www.w3.org/2000/svg" width="4.001" height="16" viewBox="0 0 4.001 16"><g transform="translate(-1210.999 -335)"><path d="M-10898,14a2,2,0,0,1,2-2,2,2,0,0,1,2,2,2,2,0,0,1-2,2A2,2,0,0,1-10898,14Zm0-6a2,2,0,0,1,2-2,2,2,0,0,1,2,2,2,2,0,0,1-2,2A2,2,0,0,1-10898,8Zm0-6a2,2,0,0,1,2-2,2,2,0,0,1,2,2,2,2,0,0,1-2,2A2,2,0,0,1-10898,2Z" transform="translate(12109 335)"/></g></svg>\n                                                <div class="tdb-s-table-options-list">\n                                                    <div class="tdb-s-tol-item" @click="templateRestore(template.ID)">Restore</div>\n                                                    <div class="tdb-s-tol-sep"></div>\n                                                    <div class="tdb-s-tol-item tdb-s-tol-item-red" @click="templatePermDelete(template.ID)">Delete permanently</div>\n                                                </div>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                                <div v-else class="tdb-s-notif tdb-s-notif-info">\n                                    <div class="tdb-s-notif-descr">No trashed cloud templates found!</div>\n                                </div>\n                            </template>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>',data:function(){return{errors:[],
templatesReady:!1,templates:[],msg:""}},created:function(){this.getTrashedCloudTemplates()},methods:{getTrashedCloudTemplates:function(){var a=this;jQuery.ajax({url:td_ajax_url,type:"post",data:{action:"tdb_ct_get_all_trashed",_nonce:window.tdb_globals.wpRestNonce},success:function(b){b=JSON.parse(b);void 0!==b.templates?(a.templates=b.templates,console.log("getTrashedCloudTemplates reply: ",b.templates)):a.errors.push({type:"error",msg:"Error, no trashed templates data received from server."});a.templatesReady=
!0},error:function(b,a,d){console.log("%c"+d,"color: #dc2121c7")}})},templateRestore:function(a){var b=this;b.errors=[];jQuery.ajax({url:td_ajax_url,type:"post",data:{action:"tdb_restore_tpl",template_id:a,_nonce:window.tdb_globals.wpRestNonce},success:function(a){a=JSON.parse(a);console.log("templateRestore reply: ",a);void 0!==a.restored_tpl_id?b.getTrashedCloudTemplates():b.errors.push(a)},error:function(a,b,e){console.log("%c"+e,"color: #dc2121c7")}})},templatePermDelete:function(a){var b=this;
b.errors=[];jQuery.ajax({url:td_ajax_url,type:"post",data:{action:"tdb_perm_delete_tpl",template_id:a,_nonce:window.tdb_globals.wpRestNonce},success:function(a){a=JSON.parse(a);console.log("templatePermDelete reply: ",a);void 0!==a.deleted_tpl_id?b.getTrashedCloudTemplates():b.errors.push(a)},error:function(a,b,e){console.log("%c"+e,"color: #dc2121c7")}})},deleteAll:function(){var a=this;a.errors=[];jQuery.ajax({url:td_ajax_url,type:"post",data:{action:"tdb_trashed_templates_delete_all",_nonce:window.tdb_globals.wpRestNonce},
success:function(b){b=JSON.parse(b);console.log("deleteAll reply: ",b);void 0!==b.deleted_templates?(a.templates=[],a.msg=b.deleted_templates+" templates deleted !"):a.errors.push(b)},error:function(a,c,d){console.log("%c"+d,"color: #dc2121c7")}})}},watch:{},components:{}};
window.tdbCloudTemplatesVue.cpt={template:'<div class="tdb-s-page tdb-s-page-templates-list">\n            <div class="tdb-s-page-content">\n                <div class="tdb-s-page-inner">\n                    <div class="tdb-s-page-sec">\n                    \n                        \x3c!-- templates --\x3e\n                        <div :class="[\'tdb-s-page-sec-content\', \'tdb-s-content\', { \'tdb-s-content-loading\' : !templatesReady} ]">\n                            <template v-if="templatesReady">\n                                \x3c!-- errors --\x3e\n                                <div class="errors" v-if="errors.length" style="margin-bottom: 20px; color: orangered;">\n                                    <div v-for="error in errors">\n                                        <div :class="\'type-\' + error.type">{{ error.msg }}</div>\n                                    </div>\n                                </div>\n                                <div v-if="Object.keys(cptTemplates).length" class="tdb-s-template-types">\n                                    <h3 class="tdb-s-template-types-title">Custom Post Type - Templates</h3>\n                                    <template v-for="(data, template_type) in cptTemplates">\n                                        <template v-if="\'post\' !== template_type">                                        \n                                            <div :class="[\'tdb-s-template-type\', \'tdb-s-template-type_\' + template_type]">\n                                                <div class="tdb-s-template-type-header">\n                                                    <h4 class="tdb-s-tth-title">{{ getTplCardHeader(data.name) }}</h4>\n                                                    <div class="tdb-s-tth-new" title="Import from Cloud Library" @click="cloudLibraryImport(\'cpt\')">\n                                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-plus">\n                                                            <line x1="12" y1="5" x2="12" y2="19"></line>\n                                                            <line x1="5" y1="12" x2="19" y2="12"></line>\n                                                        </svg>\n                                                    </div>\n                                                </div>\n                                                <templates-card :templates_card_data="data" template_type="cpt" :custom_template_type="template_type"></templates-card>\n                                            </div>\n                                        </template>\n                                    </template>  \n                                                                      \n                                    <h3 class="tdb-s-template-types-title">Custom Taxonomies - Templates</h3>\n                                    <template v-for="(data, template_type) in cptTemplates">\n                                        <template v-for="(dataTax, tax_template_type) in data.tpl_card_data_assets.tax_templates">\n                                            <template v-if="\'category\' !== tax_template_type && \'post_tag\' !== tax_template_type && \'post_format\' !== tax_template_type">\n                                                <div :class="[\'tdb-s-template-type\', \'tdb-s-template-type_\' + tax_template_type]">\n                                                    <div class="tdb-s-template-type-header">\n                                                        <h4 class="tdb-s-tth-title">{{ getTplCardHeader(dataTax.name) }}</h4>\n                                                        <div class="tdb-s-tth-new" title="Import from Cloud Library" @click="cloudLibraryImport(\'cpt_tax\')">\n                                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-plus">\n                                                                <line x1="12" y1="5" x2="12" y2="19"></line>\n                                                                <line x1="5" y1="12" x2="19" y2="12"></line>\n                                                            </svg>\n                                                        </div>\n                                                    </div>\n                                                    <templates-card :templates_card_data="dataTax" template_type="cpt_tax" :custom_template_type="tax_template_type"></templates-card>\n                                                </div>\n                                            </template>\n                                        </template>\n                                    </template>\n                                </div>\n                                <div v-else class="tdb-notif tdb-notif-info">\n                                    <div class="tdb-notif-descr">No cloud templates found!</div>\n                                </div>\n                            </template>\n                        </div>\n                        \n                    </div>\n                </div>\n            </div>\n        </div>',data:function(){return{errors:[],
templatesReady:!1,cptTemplates:[],showMobileTplModal:!1}},created:function(){this.getCPTTemplates()},methods:{getCPTTemplates:function(){var a=this;jQuery.ajax({url:td_ajax_url,type:"post",data:{action:"tdb_cpt_get_all",_nonce:window.tdb_globals.wpRestNonce},success:function(b){b=JSON.parse(b);"undefined"!==typeof b.templates?(a.cptTemplates=b.templates,console.log("getCPTTemplates reply: ",b.templates)):a.errors.push({type:"error",msg:"Error, no templates data received from server."});a.templatesReady=
!0},error:function(a,c,d){console.log("%c"+d,"color: #dc2121c7")}})},getTplCardHeader:function(a){return a.toString().charAt(0).toUpperCase()+a.toString().slice(1)},cloudLibraryImport:function(a){a="a_404"===a?"404":a;var b={wp_type:a,force_parent_template_type:a,hide_mobile_selector:"hide",install_template_route:"addRoute"};switch(a){case "single":b.assign_to_post="";break;case "category":b.assign_to_category="";break;case "404":b.assign_to_404="";break;case "archive":b.assign_to_archive="";break;
case "search":b.assign_to_search="";break;case "attachment":b.assign_to_attachment="";break;case "author":b.assign_to_author="";break;case "tag":b.assign_to_tag="";break;case "page":b.templateType="Pages";break;case "homepage":b.templateType="Homepages"}window.tdbVue.router.push({name:"loadRoute",params:b})}},watch:{},components:{"templates-card":window.tdbCloudTemplatesVue.templates_card}};
window.tdbCloudTemplatesVue.modules={template:'<div class="tdb-s-page tdb-s-page-templates-list">\n            <div class="tdb-s-page-content">\n                <div class="tdb-s-page-inner">\n                    <div class="tdb-s-page-sec">\n                    \n                        <div :class="[\'tdb-s-page-sec-content\', \'tdb-s-content\', { \'tdb-s-content-loading\' : !templatesReady} ]">\n                            <template v-if="templatesReady">\n                            \n                                \x3c!-- errors --\x3e\n                                <div class="errors" v-if="errors.length" style="margin-bottom: 20px; color: orangered;">\n                                    <div v-for="error in errors">\n                                        <div :class="\'type-\' + error.type">{{ error.msg }}</div>\n                                    </div>\n                                </div>\n                                \n                                <div v-if="templatesCardData.templates" class="tdb-s-template-types" style="display: block !important;">\n                                \n                                    <div class="tdb-s-template-type tdb-s-template-type_module" style="width: 100% !important;">\n                                        <div class="tdb-s-template-type-header">\n                                            <h4 class="tdb-s-tth-title">Modules Templates</h4>\n                                            <div class="tdb-s-tth-new" title="Import from Cloud Library" @click="cloudLibraryImport()">\n                                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-plus">\n                                                    <line x1="12" y1="5" x2="12" y2="19"></line>\n                                                    <line x1="5" y1="12" x2="19" y2="12"></line>\n                                                </svg>\n                                            </div>\n                                        </div>\n                                        <modules-templates-card :templates_card_data="templatesCardData" template_type="module"></modules-templates-card>\n                                    </div>\n                                  \n                                </div>\n                                <div v-else class="tdb-notif tdb-notif-info">\n                                    <div class="tdb-notif-descr">No modules cloud templates found !</div>\n                                </div>\n                            </template>\n                        </div>\n                        \n                    </div>\n                </div>\n            </div>\n        </div>',data:function(){return{errors:[],
templatesReady:!1,templatesCardData:{templates:[],data_preview_id:null}}},created:function(){this.getTemplates()},methods:{getTemplates:function(){var a=this;jQuery.ajax({url:td_ajax_url,type:"post",data:{action:"tdb_get_module_templates",_nonce:window.tdb_globals.wpRestNonce},success:function(b){b=JSON.parse(b);"undefined"!==typeof b.templates?(a.templatesCardData.templates=b.templates,a.templatesCardData.data_preview_id=b.data_preview_id,console.log("getTemplates reply: ",b)):a.errors.push({type:"error",
msg:"Error, no templates data received from server."});a.templatesReady=!0},error:function(a,c,d){console.log("%c"+d,"color: #dc2121c7")}})},cloudLibraryImport:function(){window.tdbVue.router.push({name:"loadRoute",params:{wp_type:"module",force_parent_template_type:"module",hide_mobile_selector:"hide",install_template_route:"addRoute"}})}},watch:{},components:{"modules-templates-card":window.tdbCloudTemplatesVue.modules_templates_card}};
window.tdbCloudTemplatesVue.index={template:'<div class="tdb-settings-inner">\n            <router-view></router-view>\n        </div>',props:{},data:function(){return{}},created:function(){window.tdbCloudTemplatesVue.router.push({name:"templatesRoute"});jQuery(".nav-tab-wrapper.cloud-templates .nav-tab[data-route='templates']").addClass("nav-tab-active")},mounted:function(){this.$nextTick(function(){jQuery(".nav-tab-wrapper.cloud-templates .nav-tab").on("click",function(a){a.preventDefault();a=jQuery(this);
var b=a.data("route");"undefined"!==typeof b&&(window.tdbCloudTemplatesVue.router.push({name:b+"Route"}),a.siblings().removeClass("nav-tab-active"),a.addClass("nav-tab-active"))})})},methods:{},watch:{},components:{templates:window.tdbCloudTemplatesVue.templates},beforeRouteUpdate:function(a,b,c){c()}};
window.tdbCloudTemplatesVue.routes=[{path:"/",component:window.tdbCloudTemplatesVue.index,name:"indexRoute",children:[{path:"/templates",component:window.tdbCloudTemplatesVue.templates,name:"templatesRoute",props:!0},{path:"/shop",component:window.tdbCloudTemplatesVue.templates_shop,name:"shopTemplatesRoute",props:!0},{path:"/trash",component:window.tdbCloudTemplatesVue.templates_trash,name:"trashRoute",props:!0},{path:"/ctp",component:window.tdbCloudTemplatesVue.cpt,name:"cptRoute",props:!0},{path:"/modules",
component:window.tdbCloudTemplatesVue.modules,name:"modulesRoute",props:!0}]}];
(function(){if("undefined"!==typeof window.tdbCloudTemplatesVue.extraRoutes){var a=window.tdbCloudTemplatesVue.extraRoutes;a.constructor===Array&&0<a.length&&a.forEach(function(a,c,d){if("string"===typeof a.path&&"string"===typeof a.name){c={path:a.path,name:a.name};if("string"===typeof a.component)c.component=window.tdbCloudTemplatesVue[a.component];else if("object"===typeof a.components){d={};for(var b in a.components)d[b]=window.tdbCloudTemplatesVue[a.components[b]];c.components=d}if("boolean"===
typeof a.props)c.props=a.props;else if("object"===typeof a.props){b={};for(var f in a.props)b[f]=a.props[f];c.props=b}window.tdbCloudTemplatesVue.routes[0].children.push(c)}})}window.tdbCloudTemplatesVue.routes.push({path:"*",redirect:{name:"indexRoute"}})})();window.tdbCloudTemplatesVue.router=new CloudLibVueRouter({mode:"abstract",routes:window.tdbCloudTemplatesVue.routes});window.tdbCloudTemplatesVue.router.push({name:"indexRoute"});
window.tdbCloudTemplatesVue.router.beforeEach(function(a,b,c){var d=[];window.tdbCloudTemplatesVue.routes[0].children.forEach(function(a){d.push(a.name)});c()});
